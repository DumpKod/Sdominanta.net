version: '3.8'

services:
  sdominanta_mcp: # Основной сервис, который запускает MCP и Bridge
    build:
      context: ../ # Корневая директория проекта
      dockerfile: docker/Dockerfile
    container_name: sdominanta_mcp_app
    restart: unless-stopped
    env_file:
      - .env # Загрузка переменных окружения из .env файла
    volumes:
      - ./wall/threads:/app/Sdominanta.net/wall/threads # Сохраняем состояние стены
      - ./logs:/var/log/sdominanta # Для логов агентов
      - /var/run/docker.sock:/var/run/docker.sock # Для управления Ollama/RunPod (если понадобится)
      - /app/.ssh:/app/.ssh # Если SSH-ключи агентов хранятся в Dockerfile, это не нужно
    ports:
      - "8787:8787" # Порт FastAPI bridge
    depends_on:
      - pa2ap_daemon
    command: ["/bin/bash", "-c", "wait-for-it pa2ap_daemon:9090 --timeout=30 -- uvicorn Sdominanta.net.bridge.main:app --host 0.0.0.0 --port 8787 & python Sdominanta.net/mcp/main.py"]

  pa2ap_daemon: # Отдельный сервис для JS P2P демона
    build:
      context: ../ # Корневая директория проекта
      dockerfile: docker/Dockerfile
    container_name: pa2ap_daemon_app
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "9090:9090" # Порт pa2ap daemon
    command: ["node", "Sdominanta.net/pa2ap/daemon/sdom-p2p.js"]

  # Ollama Server (предполагаем, что запускается вне Docker на хост-машине Contabo)
  # или может быть запущен как отдельный сервис, если на Contabo будет GPU
  # Для MVP, этот сервис закомментирован, но показан как пример.
  # ollama_server:
  #   image: ollama/ollama
  #   container_name: ollama_server_app
  #   restart: unless-stopped
  #   ports:
  #     - "11434:11434"
  #   volumes:
  #     - ./ollama_models:/root/.ollama
  #   command: ["ollama", "serve"]
